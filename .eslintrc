{
  "root": true,
  "extends": [
    "airbnb-base",
    "plugin:node/recommended-script"
  ],
  "env": {
    "es6": true,
    "node": true,
    "mocha": true,
    "jest": true,
    "protractor": true
  },
  "parserOptions": {
    "ecmaVersion": 8,
    "sourceType": "script"
  },
  "plugins": [
    "mocha-no-only"
  ],
  "rules": {
    "prefer-const": ["error", {"destructuring": "all"}],
    "one-var": ["error", {"initialized": "never"}],
    "comma-dangle": ["error", {
      "arrays": "always-multiline",
      "objects": "always-multiline",
      "imports": "never",
      "exports": "always-multiline",
      "functions": "never"
    }],
    "no-unused-vars": ["warn", {"varsIgnorePattern": "^_", "args": "all", "argsIgnorePattern": "^_"}],
    "no-param-reassign": ["off"],
    "no-underscore-dangle": ["off"],
    "object-curly-newline": ["off"],
    "class-methods-use-this": ["off"],
    "operator-linebreak": ["off"],
    "no-await-in-loop": ["off"],
    "one-var-declaration-per-line": ["error", "initializations"],
    "import/no-extraneous-dependencies": ["error", {"devDependencies": ["**/test/**/*.js", "**/*.spec.js", "**/example/*.js"]}],

    // can be fixed later
    "max-len": ["off", 120],
    "no-use-before-define": ["error", { "functions": true, "classes": false, "variables": true }],
    "no-shadow": ["error", {"builtinGlobals": false, "hoist": "functions", "allow": ["driver"]}],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],

    // mocha-no-only
    "mocha-no-only/mocha-no-only": "error",

    // node
    "node/exports-style": ["error", "exports"],
    "node/prefer-global/buffer": ["error", "always"],
    "node/prefer-global/console": ["error", "always"],
    "node/prefer-global/process": ["error", "always"],
    "node/prefer-global/text-decoder": ["error", "never"],
    "node/prefer-global/text-encoder": ["error", "never"],
    "node/prefer-global/url-search-params": ["error", "never"],
    "node/prefer-global/url": ["error", "never"]
  },
  "overrides": [{
    "files": ["**/test/**/*.js", "**/*.spec.js"],
    "rules": {
      "prefer-arrow-callback": ["off"],
      "func-names": ["off"],
      "no-console": ["off"]
    }
  }]
}
